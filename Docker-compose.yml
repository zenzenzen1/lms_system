version: '3.8'
services:
    db:
        container_name: lms_postgres_db
        image: postgres
        restart: always
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=123
        ports:
            - '5432:5432'
        volumes:
            - ./sql/initdb.sql:/docker-entrypoint-initdb.d/init-script.sql
        networks:
            - lms_network
    pgadmin_service:
        image: dpage/pgadmin4
        restart: always
        environment:
            - PGADMIN_DEFAULT_EMAIL=email@gmail.com
            - PGADMIN_DEFAULT_PASSWORD=root
        ports:
            - "8070:80"
        depends_on:
            - db
        networks:
            - lms_network
    redis_service:
        hostname: redis-host
        image: redis:7.2.5
        container_name: lms_redis_service
        restart: always
        ports:
            - "6379:6379"
        networks:
            - lms_network
        environment:
            - REDIS_PORT=6379
    

    lms-system-service:
        hostname: lms-system-service
        container_name: lms_system_service
        build:
            context: ./lms_system_server
            dockerfile: Dockerfile
        ports:
            - "8081:8081"
        networks:
            - lms_network
        depends_on:
            - db
            - redis_service
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/lms_identity_service
            - SPRING_DATASOURCE_USERNAME=postgres
            - SPRING_DATASOURCE_PASSWORD=123
            - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
            - IDENTITY_SERVICE=http://identity-service:8080/identity
        command: mvn spring-boot:run -Dspring-boot.run.profiles=prod
    identity_service:
        hostname: identity-service
        container_name: lms_identity_service
        build:
            context: ./identity_service
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        networks:
            - lms_network
        depends_on:
            - db
            - redis_service
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/lms_system
            - SPRING_DATASOURCE_USERNAME=postgres
            - SPRING_DATASOURCE_PASSWORD=123
            - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
            - LMS_SERVICE=http://lms-system-service:8081/lms
        command: mvn spring-boot:run -Dspring-boot.run.profiles=prod
    api_gateway:
        hostname: api-gateway
        container_name: api_gateway
        build:
            context: ./api_gateway_lms
            dockerfile: Dockerfile
        ports:
            - "8090:8090"
        environment:
            - IDENTITY_SERVICE=http://identity-service:8080/identity
            - LMS_SERVICE=http://lms-system-service:8081/lms
        command: mvn spring-boot:run -Dspring-boot.run.profiles=prod
        networks:
            - lms_network
networks:
    lms_network:
        driver: bridge
