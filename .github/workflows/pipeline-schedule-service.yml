name: lms schedule service API pipeline

on:
  push:
    branches:
      - cidemo
      - main
    paths:
      - schedule_service/**
      - .github/workflows/pipeline-schedule-service.yml
jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6
      - name: Build common dependency
        run: |
          cd common
          mvn clean install -DskipTests
      - name: Compile project
        run: |
          cd schedule_service
          ./mvnw clean compile
  test:
    runs-on: ubuntu-latest
    name: Run tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6
      - name: Build common dependency
        run: |
          cd common
          mvn clean install -DskipTests
      - name: Run tests
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
          # TESTCONTAINERS_REUSE_ENABLE: false
          # TESTCONTAINERS_HOST_OVERRIDE: "localhost"
        run: |
          cd schedule_service
          ./mvnw clean test -Dspring.profiles.active=test
  build:
    runs-on: ubuntu-latest
    name: Build project
    needs: [compile, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6
      - name: Build common dependency
        run: |
          cd common
          mvn clean install -DskipTests
      - name: Build project
        run: |
          cd schedule_service
          ./mvnw clean package
  build-image:
    runs-on: ubuntu-latest
    name: Build Docker image
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6
      - name: Build common dependency
        run: |
          cd common
          mvn clean install -DskipTests
      - name: Extract version
        id: extract_version
        run: |
          cd schedule_service
          echo VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec) >> $GITHUB_OUTPUT
      
