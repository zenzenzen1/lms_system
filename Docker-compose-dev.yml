version: '3.8'
services:
    nexus:
      image: sonatype/nexus3
      ports:
        - "9081:8081"   # Nexus web UI
        - "9082:8082"   
      environment:
        INSTALL4J_ADD_VM_PARAMS: "-Xms512m -Xmx1024m -XX:MaxDirectMemorySize=2G -Djava.util.prefs.userRoot=/nexus-data/javaprefs"
        NEXUS_SECURITY_RANDOMPASSWORD: false
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9081"]
        interval: 30s
        timeout: 10s
        retries: 10
    #   volumes:
    #     - ./nexus-data:/nexus-data
    identity-service-db:
        image: postgres
        restart: always
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=123
        ports:
            - '5500:5432'
        volumes:
            - ./sql/identity_service_initdb.sql:/docker-entrypoint-initdb.d/init-script.sql
        networks:
            - lms_network
    schedule-service-db:
        image: postgres
        restart: always
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=123
        ports:
            - '5501:5432'
        volumes:
            - ./sql/schedule_service_initdb.sql:/docker-entrypoint-initdb.d/init-script.sql
        networks:
            - lms_network
    pgadmin-service:
        image: dpage/pgadmin4
        restart: always
        environment:
            - PGADMIN_DEFAULT_EMAIL=email@gmail.com
            - PGADMIN_DEFAULT_PASSWORD=root
        ports:
            - "8070:80"
        depends_on:
            - identity-service-db
            - schedule-service-db
        networks:
            - lms_network
    redis-service:
        hostname: redis-host
        image: redis:7.2.5
        container_name: lms_redis_service
        restart: always
        ports:
            - "6379:6379"
        networks:
            - lms_network
        environment:
            - REDIS_PORT=6379
    mongo:
        hostname: mongo-host
        container_name: lms_mongo_db
        image: bitnami/mongodb:latest
        restart: always
        ports:
            - '27017:27017'
        environment:
          - MONGODB_ROOT_USER=root
          - MONGODB_ROOT_PASSWORD=123
        networks:
            - lms_network
    kafka:
        image: 'bitnami/kafka:3.7.0'
        container_name: kafka
        hostname: kafka
        ports:
            - '9094:9094'
        restart: always
        environment:
            - KAFKA_CFG_NODE_ID=0
            - KAFKA_CFG_PROCESS_ROLES=controller,broker
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://kafka:9094
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
        networks:
            - lms_network
    schedule-service:
        hostname: schedule-service
        container_name: lms_schedule_service
        build:
            context: ./schedule_service
            dockerfile: Dockerfile
            # context: .
            # dockerfile: DockerfileTest
        ports:
            # - "8081:8081"
            - "8086:8086"
        networks:
            - lms_network
        depends_on:
            - schedule-service-db
            - redis-service
            - identity_service
        environment:
            - REDIS_HOST=redis-host
            - REDIS_PORT=6379
            - KAFKA_HOST=kafka:9094
            - SPRING_DATASOURCE_URL=jdbc:postgresql://schedule-service-db:5432/schedule_service
            - SPRING_DATASOURCE_USERNAME=postgres
            - SPRING_DATASOURCE_PASSWORD=123
            - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
            - IDENTITY_SERVICE=http://identity-service:8001/identity
            - MONGO_HOST=mongo-host
        # command: mvn -f lms_system_server/pom.xml spring-boot:run -Dspring-boot.run.profiles=prod
      
    identity_service:
        hostname: identity-service
        container_name: lms_identity_service
        build:
            context: ./identity_service
            dockerfile: Dockerfile
        ports:
            - "8001:8001"
        networks:
            - lms_network
        depends_on:
            - identity-service-db
            - redis-service
        environment:
            - LMS_SCHEDULE_SERVICE=http://schedule-service:8086/lms_schedule_service
            - REDIS_HOST=redis-host
            - REDIS_PORT=6379
            - SPRING_DATASOURCE_URL=jdbc:postgresql://identity-service-db:5432/lms_identity_service
            - SPRING_DATASOURCE_USERNAME=postgres
            - SPRING_DATASOURCE_PASSWORD=123
            - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
        # command: mvn spring-boot:run -Dspring-boot.run.profiles=prod
    api_gateway:
        hostname: api-gateway
        container_name: api_gateway
        build:
            context: ./api_gateway_lms
            dockerfile: Dockerfile
        ports:
            - "8090:8090"
        environment:
            - IDENTITY_SERVICE=http://identity-service:8001/identity
            - NOTIFICATION_SERVICE=http://lms-notification-service:8085/notification
            - LMS_SCHEDULE_SERVICE=http://schedule-service:8086/lms_schedule_service
        depends_on:
            - identity_service
            - schedule-service
            - lms_notification_service
        command: mvn spring-boot:run -Dspring-boot.run.profiles=prod
        networks:
            - lms_network
    lms_notification_service:
        hostname: lms-notification-service
        container_name: lms-notification
        build:
            context: ./lms_notification_service
            dockerfile: Dockerfile
        ports:
            - "8085:8085"
        environment:
            # - NEXUS_URL=http://nexus:8081/repository/maven-public/
            - MONGO_HOST=mongo-host
            - MONGO_USERNAME=root
            - MONGO_PASSWORD=123
            - MONGO_PORT=27017
            - KAFKA_HOST=kafka:9094
        # command: mvn spring-boot:run -DskipTests
        depends_on:
            - mongo
            - kafka
            - nexus
        networks:
            - lms_network
    lms_web:
        build:
            context: ./lms_web
            dockerfile: dev.Dockerfile
            # args:
            #     - VITE_API_GATEWAY_URL=http://api-gateway:8090/api/v1
            #     - VITE_FIREBASE_API_KEY="AIzaSyB2YO8qiqCJpO1RswmujgFP_WwENhTSUWY"
        environment:
            # - VITE_API_GATEWAY_URL=http://api-gateway:8090/api/v1
            - VITE_API_GATEWAY_URL=http://localhost:8090/api/v1
            - VITE_FIREBASE_API_KEY=AIzaSyB2YO8qiqCJpO1RswmujgFP_WwENhTSUWY
        ports:
            - "5175:5175"
        depends_on:
            - api_gateway
        # command: npm run dev
        networks:
            - lms_network
networks:
    lms_network:
        driver: bridge
