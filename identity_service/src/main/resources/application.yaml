
spring:
  application:
    name: lms_identity_service
  kafka:
    bootstrap-servers: localhost:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # value-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  datasource:
    url: "${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/lms_identity_service}"
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:123}
  jpa: 
    hibernate: 
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        '[format_sql]': false
# logging:
#   file:
#     path: logs/
#     name: logs/lms_identity_service.log
#     clean-history-on-start: true
#   level:
#     root: INFO
#   logback:
#     rollingpolicy:
#       clean-history-on-start: true
    
  
  # security:
  #   oauth2:
  #     client:
  #       registration:
  #         google:
  #           client-name: google
  #           scope:
  #             - email
  #             - profile : OISUFOEIFUEOIFUOIEUFOIEUFOEIUF
server:
  port: 8080
  servlet:
    context-path: /identity
  error: 
    include-message: always



jwt:
  signerKey: "erBbQWxtozTCcuxiDMgfAlp0xI22EoEGRVhLZMt3N9WTCbbYpPPfYDOstWVUSEqN"
  issuer: "zenzen1"
  valid-duration: 3000 # seconds
  refreshable-duration: 4500 # seconds
app:
  services:
    lms: ${LMS_SERVICE:http://localhost:8081/lms}
    # lms: http://lms-system-service:8081/lms
  redis:
    # redis-host: ${REDIS_HOST:127.0.0.1}
    # redis-port: ${REDIS_PORT:6379}
    redis-host: "127.0.0.1"
    redis-port: 6379
    